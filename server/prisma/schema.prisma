// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Community {
  id    Int    @id @default(autoincrement())
  commuId Int @unique @default(autoincrement())

  commuInfoId  Int @unique
  commuInfo CommuInfo @relation(fields: [commuInfoId], references: [commuId])

  commuGroupMember User[]

  commuBoard CommuBoard

  @@map("COMMUNITY")
}

model CommuBoard {
  id    Int    @id @default(autoincrement())
  commuId Int @unique @default(autoincrement())

  commuThemeName String[] @unique
  commuThemeIconImgUrl String
  commuThemePosts Post[]
}

model CommuInfo {
  id    Int    @id @default(autoincrement())
  commuId Int @unique @default(autoincrement())

  community Community?

  commuProfileImgUrl String
  commuName String @unique
  commuInfo String
  commuHT String[]
 
 @@map("COMMU_INFO")
}


model User {
  id    Int    @id @default(autoincrement())
  email String @unique

  userAuthId Int         @unique
  userAuth   UserAuth    @relation(fields: [userAuthId], references: [id])
  profileId  Int         @unique
  profile    UserProfile @relation(fields: [profileId], references: [id])
  
  posts Post[]
  communities Community[]

  @@map("USER")
}

model UserAuth {
  id             Int    @id @default(autoincrement())
  hashedPassword String

  user User?

  @@map("USER_AUTH")
}

model UserProfile {
  id   Int    @id @default(autoincrement())
  name String

  user User?

  avatarId Int    @unique
  avatar   UserAvatar @relation(fields: [avatarId], references: [id])

  @@map("USER_PROFILE")
}

model UserAvatar {
  id              Int    @id @default(autoincrement())
  characterImgUrl String
  carImgUrl       String

  userProfile UserProfile?

  @@map("USER_AVATAR")
}

model Post {
  id Int @id @default(autoincrement())

  userId Int
  user User @relation(fields: [userId], references: [id])

  // implement later
}