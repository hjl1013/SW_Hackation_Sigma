// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Community {
  id Int @id @unique @default(autoincrement())

  commuProfileImgUrl String
  commuName          String   @unique
  commuIntro         String
  commuHT            String[]
  commuMemberNumber  String

  commuThemes CommuTheme[]

  @@map("COMMUNITY")
}

model CommuTheme {
  id Int @id @unique @default(autoincrement())

  commuId   Int
  community Community @relation(fields: [commuId], references: [id])

  commuThemeName    String
  commuThemeIconUrl String

  posts Post[]

  @@map("COMMU_THEME")
}

model Post {
  id Int @id @default(autoincrement())

  userId Int
  user   User @relation(fields: [userId], references: [id])

  commuThemeId Int
  commuTheme   CommuTheme @relation(fields: [commuThemeId], references: [id])

  ImgUrl         String
  title          String
  text           String
  numberOfHearts Int

  locationId Int      @unique
  location   Location @relation(fields: [locationId], references: [id])

  @@map("POST")
}

model Location {
  id Int @id @default(autoincrement())

  post Post?

  locationName      String @unique
  locationLatitude  Float
  locationLongitude Float

  @@map("LOCATION")
}

model User {
  id    Int    @id @default(autoincrement())
  email String @unique

  userAuthId Int         @unique
  userAuth   UserAuth    @relation(fields: [userAuthId], references: [id])
  profileId  Int         @unique
  profile    UserProfile @relation(fields: [profileId], references: [id])

  posts Post[]

  @@map("USER")
}

model UserAuth {
  id             Int    @id @default(autoincrement())
  hashedPassword String

  user User?

  @@map("USER_AUTH")
}

model UserProfile {
  id   Int    @id @default(autoincrement())
  name String

  user User?

  avatarId Int        @unique
  avatar   UserAvatar @relation(fields: [avatarId], references: [id])

  @@map("USER_PROFILE")
}

model UserAvatar {
  id              Int    @id @default(autoincrement())
  characterImgUrl String
  carImgUrl       String

  userProfile UserProfile?

  @@map("USER_AVATAR")
}
